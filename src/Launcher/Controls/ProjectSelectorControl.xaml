<UserControl x:Class="Launcher.Controls.ProjectSelectorControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vms="clr-namespace:Launcher.ViewModels"
			 xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:Launcher.Controls"
			 xmlns:launcher="clr-namespace:Launcher"
			 xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
			 xmlns:ui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"  
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"  
			 mc:Ignorable="d"
			 Margin="5"
			 Padding="5"
			 Width="500"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 MinHeight="250"
			 d:DataContext="{d:DesignInstance vms:ProjectSelectorViewModel}"
			 d:DesignHeight="450"
			 d:DesignWidth="800">
	<UserControl.Resources>
		<ResourceDictionary>
            <ControlTemplate x:Key="{x:Static local:ResourceKeys.DeleteEntryButtonTemplateKey}" TargetType="Button">
                <Border Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}">
                    <imaging:CrispImage VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Moniker="{x:Static catalog:KnownMonikers.DeleteFolder}"
                    />

                </Border>
            </ControlTemplate>

            <Style TargetType="RadioButton">
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static vs:ThemedDialogColors.WindowPanelTextBrushKey}}" />
			</Style>
			<KeyTime x:Key="AnimMidDuration">0:0:0.150</KeyTime>
			<KeyTime x:Key="AnimEndDuration">0:0:0.300</KeyTime>

			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
			<local:ExePathConverter x:Key="ExePathConverter" />
			<local:EntryConverter x:Key="EntryConverter" />

			<Style TargetType="ContentControl">
				<Setter Property="IsTabStop" Value="False" />
			</Style>

			<DataTemplate x:Key="ExecutableModeContentTemplate"
						  DataType="ContentControl">
				<Grid d:DataContext="{d:DesignInstance vms:ProjectSelectorViewModel}"
					  DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}">
					<Grid.Resources>
						<CollectionViewSource x:Key="col" Source="{Binding Entries}" Filter="ExecutableFilter" />
					</Grid.Resources>
					<Grid.RowDefinitions>
						<RowDefinition Height="AUto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<DockPanel VerticalAlignment="Top"
							   d:DataContext="{d:DesignInstance vms:ProjectSelectorViewModel}"
							   Margin="0,0,0,3">
						<Button x:Name="BrowseButton"
							DockPanel.Dock="Right"
							Margin="3,0,0,0"
							Click="OpenFileDialog"
							Content="Browse"/>

						<TextBox DockPanel.Dock="Left"
								 Height="{Binding ActualHeight, ElementName=BrowseButton}"
								 >
							<TextBox.Text>
								<Binding Path="SelectedExecutable"
									 Mode="TwoWay"
									 ValidatesOnNotifyDataErrors="True"
									 UpdateSourceTrigger="PropertyChanged"/>
							</TextBox.Text>
							<TextBox.ToolTip>
								<ToolTip DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
									 d:DataContext="{d:DesignInstance vms:ProjectSelectorViewModel}"
									 Visibility="{Binding IsInvalidExecutable, Converter={StaticResource BooleanToVisibilityConverter}}">
									<TextBlock Text="{Binding InvalidTargetErrorMessage}"/>
								</ToolTip>
							</TextBox.ToolTip>
						</TextBox>
					</DockPanel>

					<Border Grid.Row="1">
                        <ListView ItemsSource="{Binding Source={StaticResource col}}">
                            <ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.ThemedDialogListViewItemStyleKey}}">
									<Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="local:Behaviors.EntrySelectionBehavior" Value="True" />
                                    <!--<Setter Property="Margin" Value="-2,0" />-->
                                    <Setter Property="Padding" Value="3,0" />
                                    <Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="ListViewItem">
												<Border HorizontalAlignment="Stretch"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        Height="{TemplateBinding Height}"
                                                        Padding="{TemplateBinding Padding}"
														Margin="{TemplateBinding Margin}">
													<DockPanel>
														<Border DockPanel.Dock="Right">
															<Button Template="{StaticResource {x:Static local:ResourceKeys.DeleteEntryButtonTemplateKey}}"
                                                                    HorizontalAlignment="Right"
                                                                    Command="{Binding DataContext.DeleteExeEntryCommand, RelativeSource={RelativeSource AncestorType=Grid}}"
																	Background="Transparent"
                                                                    Name="EntryDeleteButton"
                                                                    VerticalAlignment="Center"
                                                                    VerticalContentAlignment="Center"
                                                                    IsTabStop="False"
                                                                    CommandParameter="{Binding}"
                                                                    Width="16"
                                                                    Height="16"
																	Padding="2"
                                                                    />
														</Border>
														<Border DockPanel.Dock="Left">
															<TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ExePathConverter}}"
                                                                       Name="ExePathTextBlock"
																	   VerticalAlignment="Center"
                                                                       ClipToBounds="True"
                                                                       UseLayoutRounding="True"
																	   local:Behaviors.UpdateTextOnSizeChanged="True"
																	   >
																<TextBlock.ToolTip>
																	<ToolTip d:DataContext="{d:DesignInstance vms:EntryViewModel}" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
																		<TextBlock Text="{Binding TargetPath}" />

																		<ToolTip.Style>
																			<Style TargetType="ToolTip">
																				<Setter Property="Visibility" Value="Collapsed" />
																				<Style.Triggers>
																					<DataTrigger Binding="{Binding HasDisplayText}"
																								 Value="True">
																						<Setter Property="Visibility" Value="Visible" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</ToolTip.Style>
																	</ToolTip>
																</TextBlock.ToolTip>
															</TextBlock>
														</Border>
													</DockPanel>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>

                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="BorderBrush" Value="{StaticResource {x:Static vs:EnvironmentColors.ToolWindowButtonHoverActiveBorderBrushKey}}" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True"  />
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"  />
                                            </MultiDataTrigger.Conditions>
                                                <!--<Setter Property="Background" Value="{StaticResource {x:Static vs:ThemedDialogColors.SelectedItemActiveTextBrushKey}}" />-->
                                            <!--<Setter Property="Background" Value="Red" />-->
                                        </MultiDataTrigger>
                                    </Style.Triggers>
								</Style>
							</ListView.ItemContainerStyle>
						</ListView>
					</Border>
				</Grid>
			</DataTemplate>

			<DataTemplate x:Key="ProjectSelectionContentTemplate" DataType="ContentControl">
				<ListView d:DataContext="{d:DesignInstance vms:ProjectSelectorViewModel}"
						  DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}"
						  MouseDoubleClick="OnProjectMouseDoubleClick"
						  ItemsSource="{Binding Projects}"
						  Grid.IsSharedSizeScope="True"
						  IsEnabled="{Binding HasMultipleProjects, Mode=OneTime}"
						  SelectedItem="{Binding SelectedEntry}">
					<ListView.ItemTemplate>
						<DataTemplate DataType="vms:ProjectEntryViewModel">
							<Border Margin="8,0" MinHeight="20">
								<Border VerticalAlignment="Center">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition SharedSizeGroup="ProjectIconsColumn"
															  Width="18"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Border Grid.Column="0">
											<Image Source="{Binding Bitmap}"/>
										</Border>
										<TextBlock Grid.Column="1"
												   Margin="5,2"
												   DockPanel.Dock="Right"
												   Text="{Binding TargetPath}"/>
									</Grid>
								</Border>
							</Border>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</DataTemplate>

		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Border Grid.Row="0"
				Margin="0,0,0,3"
				HorizontalAlignment="Center">
			<Label Content="Target Selection">
				<Label.Style>
					<Style TargetType="Label" BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.LabelEnvironment133PercentFontSizeStyleKey}}">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static vs:ThemedDialogColors.WindowPanelTextBrushKey}}" />
					</Style>
				</Label.Style>
			</Label>
		</Border>

		<Border Grid.Row="1" Margin="0,0,0,10">
			<StackPanel Orientation="Horizontal" Margin="0,5,0,5">
				<Label>
					<Label.Style>
						<Style TargetType="Label" BasedOn="{StaticResource {x:Static vsfx:VsResourceKeys.LabelEnvironment111PercentFontSizeStyleKey}}">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static vs:ThemedDialogColors.WindowPanelTextBrushKey}}" />
						</Style>
					</Label.Style>
					Select:
				</Label>
				<StackPanel Orientation="Horizontal">
					<RadioButton GroupName="SelectionType"
								 IsChecked="{Binding Mode, Converter={StaticResource EntryConverter}, ConverterParameter={x:Static launcher:ProjectSelectorAction.Project}}"
								 Margin="12,0"
								 Content="Project" />
					<RadioButton GroupName="SelectionType"
								 IsChecked="{Binding Mode, Converter={StaticResource EntryConverter}, ConverterParameter={x:Static launcher:ProjectSelectorAction.Executable}}"
								 Content="Executable" />
				</StackPanel>
			</StackPanel>
		</Border>

		<Border Grid.Row="2">
			<Control IsTabStop="False">
				<Control.Template>
					<ControlTemplate TargetType="Control">
						<Grid>
							<Border Name="ProjectContentControl">
								<ContentControl HorizontalContentAlignment="Center"
												IsTabStop="False"
												ContentTemplate="{StaticResource ProjectSelectionContentTemplate}"
												/>
							</Border>
							<Border Name="ExecutableContentControl">
								<ContentControl HorizontalContentAlignment="Center"
												ContentTemplate="{StaticResource ExecutableModeContentTemplate}"
												VerticalContentAlignment="Center" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding Mode}" Value="{x:Static launcher:ProjectSelectorAction.Executable}">
								<Setter TargetName="ProjectContentControl" Property="Visibility" Value="Collapsed" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Mode}"
										 Value="{x:Static launcher:ProjectSelectorAction.Project}">
								<Setter TargetName="ExecutableContentControl" Property="Visibility" Value="Collapsed" />
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExecutableContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
												<EasingDoubleKeyFrame KeyTime="{StaticResource AnimMidDuration}" Value="0" />
											</DoubleAnimationUsingKeyFrames>

											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ProjectContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame Value="0.0" KeyTime="0:0:0" />
												<EasingDoubleKeyFrame Value="0.0" KeyTime="{StaticResource AnimMidDuration}" />
												<EasingDoubleKeyFrame KeyTime="{StaticResource AnimEndDuration}" Value="1.0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ProjectContentControl"
																		   Storyboard.TargetProperty="Opacity"
																		   BeginTime="0:0:0">
												<EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
												<EasingDoubleKeyFrame KeyTime="{StaticResource AnimMidDuration}"
																	  Value="0" />
											</DoubleAnimationUsingKeyFrames>

											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExecutableContentControl"
																		   Storyboard.TargetProperty="Opacity">
												<EasingDoubleKeyFrame Value="0.0" />
												<EasingDoubleKeyFrame KeyTime="{StaticResource AnimMidDuration}"
																	  Value="0.0" />
												<EasingDoubleKeyFrame KeyTime="{StaticResource AnimEndDuration}"
																	  Value="1.0" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Control.Template>
			</Control>
		</Border>

		<Border Grid.Row="3"
				Padding="2"
				Margin="0,10,0,0">
			<StackPanel Orientation="Horizontal"
						HorizontalAlignment="Right"
						Margin="0,2">
				<Button Style="{StaticResource {x:Static local:ResourceKeys.HyperlinkButtonStyleKey}}"
                        Command="{Binding SaveAsProfileCommand}"
						IsEnabled="{Binding CanSaveProfile}">Save as profile</Button>

				<Button Content="Cancel"
						Command="{Binding CancelCommand}"
						CommandParameter="{Binding ., RelativeSource={RelativeSource Self}}"
						Margin="5,0,5,0"/>
				<Button Content="Ok"
						Command="{Binding OkCommand}"
						CommandParameter="{Binding ., RelativeSource={RelativeSource Self}}"
						Margin="0,0,0,0"/>
			</StackPanel>
		</Border>
	</Grid>
</UserControl>
